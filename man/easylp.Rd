% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R
\name{easylp}
\alias{easylp}
\title{Easy Linear Problem}
\value{
A named list with the values of each variable.

Array, where rows are variables, first column is the lower bound,
second column is the current value, and third column is the upper bound.

Array, where rows are variables, first column is the lower bound,
second column is the current value, and third column is the upper bound.
}
\description{
Object containing all the information about a linear problem, as well
as functions to define, modify, and solve it.
}
\examples{

## ------------------------------------------------
## Method `easylp$var`
## ------------------------------------------------

lp <- easylp$new()
lp$var("x", Origin = letters[1:3], Destination = letters[1:3], lower = 0)
my_sets <- list(Origin = letters[1:3], Destination = letters[1:3])
lp$var("y", !!!my_sets, lower = 0)
lp$variables
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{variables}}{List of variables included.}

\item{\code{nvar}}{Actual number of variables, \code{sum(lengths(variables))}.}

\item{\code{constraint}}{List including the constraint matrix 'mat',
a vector of directions 'dir', and a vector of right-hand-side values 'rhs'.}

\item{\code{objective_fun}}{Vector of coefficients for the objective function.}

\item{\code{objective_add}}{Optional value to add to the objective value.}

\item{\code{direction}}{Character indicating whether to minimize 'min' or maximize
'max' the objective function.}

\item{\code{status}}{Character indicating the status of the problem. Initialized as
'unsolved'. Changes when solving the problem using \code{easylp$solve()}.}

\item{\code{objective_value}}{Value of the objective function with the optimal solution.}

\item{\code{solution}}{Vector containing the optimal values for the variables.
See \link{easylp$pretty_solution()} for a better representation of the solution.}

\item{\code{pointer}}{Pointer to an lpSolveAPI object.
See more at \url{https://lpsolve.sourceforge.net/5.5/}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-easylp-var}{\code{easylp$var()}}
\item \href{#method-easylp-con}{\code{easylp$con()}}
\item \href{#method-easylp-min}{\code{easylp$min()}}
\item \href{#method-easylp-max}{\code{easylp$max()}}
\item \href{#method-easylp-solve}{\code{easylp$solve()}}
\item \href{#method-easylp-pretty_solution}{\code{easylp$pretty_solution()}}
\item \href{#method-easylp-pretty_constraints}{\code{easylp$pretty_constraints()}}
\item \href{#method-easylp-sensitivity_objective}{\code{easylp$sensitivity_objective()}}
\item \href{#method-easylp-sensitivity_rhs}{\code{easylp$sensitivity_rhs()}}
\item \href{#method-easylp-feasable}{\code{easylp$feasable()}}
\item \href{#method-easylp-check_feasable}{\code{easylp$check_feasable()}}
\item \href{#method-easylp-check_solved}{\code{easylp$check_solved()}}
\item \href{#method-easylp-any_integer}{\code{easylp$any_integer()}}
\item \href{#method-easylp-reset_solution}{\code{easylp$reset_solution()}}
\item \href{#method-easylp-.obj}{\code{easylp$.obj()}}
\item \href{#method-easylp-test}{\code{easylp$test()}}
\item \href{#method-easylp-print}{\code{easylp$print()}}
\item \href{#method-easylp-clone}{\code{easylp$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-var"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-var}{}}}
\subsection{Method \code{var()}}{
Define a variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$var(
  name,
  ...,
  integer = FALSE,
  binary = FALSE,
  lower = -Inf,
  upper = +Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character scalar, name of the variable. Will be used in the
constraints and objective function.}

\item{\code{...}}{Optional sets used to index the variable. Can be named.
Supports \code{!!!sets} for using a list of sets. See examples.}

\item{\code{integer}}{Logical. Is the variable an integer?}

\item{\code{binary}}{Logical. Is the variable binary/boolean/logical?}

\item{\code{lower}}{Numeric scalar. Lower bound for the variable.}

\item{\code{upper}}{Numeric scalar. Upper bound for the variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{lp <- easylp$new()
lp$var("x", Origin = letters[1:3], Destination = letters[1:3], lower = 0)
my_sets <- list(Origin = letters[1:3], Destination = letters[1:3])
lp$var("y", !!!my_sets, lower = 0)
lp$variables
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-con"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-con}{}}}
\subsection{Method \code{con()}}{
Define constraints.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$con(..., expr_list = list(), .env = caller_env())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Constraints. See \code{vignette("constraints")}. Can be named.}

\item{\code{expr_list}}{Optionally, a list of expressions representing constraints.}

\item{\code{.env}}{Environment where non-variables should be evaluated.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-min"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-min}{}}}
\subsection{Method \code{min()}}{
Define objective function for a minimization problem.
Uses the same syntax as constraints.
Must be a single value, so use \code{sum()} when needed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$min(objective)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-max"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-max}{}}}
\subsection{Method \code{max()}}{
Define objective function for a maximization problem.
Uses the same syntax as constraints.
Must be a single value, so use \code{sum()} when needed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$max(objective)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-solve"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-solve}{}}}
\subsection{Method \code{solve()}}{
Find an optimal solution.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$solve(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Arguments passed on to \code{lpSolveAPI::lp.control()}.
See \code{\link[lpSolveAPI]{lp.control.options}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-pretty_solution"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-pretty_solution}{}}}
\subsection{Method \code{pretty_solution()}}{
Display the solution using an array for each defined variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$pretty_solution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-pretty_constraints"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-pretty_constraints}{}}}
\subsection{Method \code{pretty_constraints()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$pretty_constraints()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-sensitivity_objective"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-sensitivity_objective}{}}}
\subsection{Method \code{sensitivity_objective()}}{
Compute sensitivity for objective function coefficients.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$sensitivity_objective()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-sensitivity_rhs"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-sensitivity_rhs}{}}}
\subsection{Method \code{sensitivity_rhs()}}{
Compute sensitivity for constraint right-hand-side coefficients.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$sensitivity_rhs()}\if{html}{\out{</div>}}
}

\subsection{Details}{
For technical reasons, this function can not be used if there are
integer or binary variables.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-feasable"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-feasable}{}}}
\subsection{Method \code{feasable()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$feasable(solution = self$solution, tol = 2e-08)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-check_feasable"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-check_feasable}{}}}
\subsection{Method \code{check_feasable()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$check_feasable()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-check_solved"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-check_solved}{}}}
\subsection{Method \code{check_solved()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$check_solved()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-any_integer"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-any_integer}{}}}
\subsection{Method \code{any_integer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$any_integer()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-reset_solution"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-reset_solution}{}}}
\subsection{Method \code{reset_solution()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$reset_solution()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-.obj"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-.obj}{}}}
\subsection{Method \code{.obj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$.obj(expr)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-test"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-test}{}}}
\subsection{Method \code{test()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$test(expr)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-print"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-easylp-clone"></a>}}
\if{latex}{\out{\hypertarget{method-easylp-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{easylp$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
